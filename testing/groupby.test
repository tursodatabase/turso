#!/usr/bin/env tclsh

set testdir [file dirname $argv0]
source $testdir/tester.tcl

do_execsql_test group_by {
  select u.first_name, sum(u.age) from users u group by u.first_name limit 10;
} {Aaron|2865
Abigail|912
Adam|1977
Adrian|459
Adriana|22
Adrienne|354
Aimee|81
Alan|936
Albert|909
Alec|368}

do_execsql_test group_by_without_aggs {
  select u.first_name from users u group by u.first_name limit 10;
} {Aaron
Abigail
Adam
Adrian
Adriana
Adrienne
Aimee
Alan
Albert
Alec}

do_execsql_test group_by_two_joined_columns {
  select u.first_name, p.name, sum(u.age) from users u join products p on u.id = p.id group by u.first_name, p.name limit 10;
} {Aaron|As|64
Aaron|Available|62
Aaron|Bag|46
Aaron|Become|70
Aaron|Bit|34
Aaron|By|92
Aaron|Dog|76
Aaron|Far|26
Aaron|Fly|67
Aaron|Free|20}

do_execsql_test group_by_order_by {
  select u.first_name, p.name, sum(u.age) from users u join products p on u.id = p.id group by u.first_name, p.name order by p.name limit 10;
} {David|A|77
Eric|A|25
Heather|A|24
James|A|84
Jeanne|A|26
John|A|50
Juan|A|68
Michael|A|68
Paul|A|26
Ryan|A|85}

do_execsql_test group_by_order_by_aggregate {
  select u.first_name, p.name, sum(u.age) from users u join products p on u.id = p.id group by u.first_name, p.name order by sum(u.age) limit 10;
} {Alexis|World|18
Alicia|Father|18
Alicia|Stop|18
Allison|Side|18
Amber|Price|18
Andrew|Onto|18
Andrew|Surface|18
Angela|Again|18
Angela|Control|18
Anthony|Generation|18}

do_execsql_test group_by_multiple_aggregates {
  select u.first_name, sum(u.age), count(u.age) from users u group by u.first_name order by sum(u.age) limit 10;
} {Robyn|18|1
Adriana|22|1
Collin|23|1
Ariana|25|1
Ross|26|1
Earl|34|1
Mckenzie|35|1
Sonia|35|1
Karla|37|2
Darius|39|1}

do_execsql_test group_by_multiple_aggregates_2 {
  select u.first_name, sum(u.age), group_concat(u.age) from users u group by u.first_name order by u.first_name limit 10;
} {Aaron|2865|77,46,22,62,20,63,55,67,36,40,76,78,44,64,73,70,74,54,50,29,26,67,51,26,58,34,31,43,63,32,81,22,52,55,85,56,43,66,67,45,45,26,64,65,78,41,59,44,29,77,61,80,55,38
Abigail|912|78,34,52,83,67,33,43,19,82,74,27,52,74,66,22,32,74
Adam|1977|61,60,30,36,41,45,41,47,57,46,29,77,72,56,63,55,66,19,68,39,34,26,84,19,70,33,63,65,21,74,72,39,50,74,23,40,63,74,21,24
Adrian|459|33,80,72,44,70,55,53,52
Adriana|22|22
Adrienne|354|36,76,51,49,78,64
Aimee|81|81
Alan|936|39,79,58,44,57,82,56,77,41,29,25,84,46,62,33,25,19,80
Albert|909|83,39,20,38,64,68,29,69,81,27,66,31,69,84,33,69,39
Alec|368|85,56,72,73,31,51}

do_execsql_test group_by_complex_order_by {
  select u.first_name, group_concat(u.last_name) from users u group by u.first_name order by -1 * length(group_concat(u.last_name)) limit 1;
} {Michael|Oneill,Flores,Barber,Robles,Peterson,Edwards,Barrera,Smith,Klein,Brewer,Crane,Garza,Williams,Wilson,Jenkins,Torres,Pugh,Decker,Stein,Walton,Williams,Escobar,Jimenez,Gallagher,Lane,Moore,Foster,Myers,Hawkins,Guerrero,Burns,Dixon,Horton,Walker,Arnold,Green,Acevedo,Vasquez,Mcdonald,Scott,Coleman,Baker,Barton,Mathis,Huerta,Schmidt,Peters,Myers,Smith,Hancock,Kim,Ward,Huynh,Hughes,Miller,Valentine,Johnson,Ortega,Potter,Smith,Cherry,Perkins,White,Gonzalez,Johnson,Nolan,Clark,Patel,Velasquez,Mckinney,Williams,Montgomery,Owens,Hayes,Dawson,Gomez,Ramos,Acosta,Hull,Rivas,Snyder,Petty,Norton,Davis,Ferguson,Gomez,Stanley,Marshall,Hansen,Paul,Smith,Johnson,Coleman,Nixon,Thomas,Martin,Harper,Bell,Jackson,Edwards,Stewart,Jones,Chavez,Johnston,Tucker,Morgan,Sanders,Jones,Mccarthy,Gallagher,Murray,Gill,Cruz,Ortega,Jordan,Ferguson,Harrison,Jones,Campbell,Deleon,Silva,Lee,Kemp,Mcdonald,Ramirez,Wade,Carter,Butler,Wright,Ellison,Davidson,Ochoa,Thompson,Adkins,Herrera,Bowers,Zimmerman,Durham,Meyer,Hicks,Macdonald,Morrison,Larson,Reese,Berry,Cochran,Williams,Washington,Rivera,Sanchez,Gibson,Hanson,Shannon,Robbins,Martinez,Jackson,Turner,Glover,Johnston,Flores,Blevins,Matthews,Schmidt,Foster,Lee,Sullivan,Gonzales,Woods,Greene,Clayton,Rodriguez,Williams,Rivers,Walls,Little,Diaz,Green,Cook,Evans,Hayes,Gomez,Finley,Durham,Spears,Kirby,Austin,Hayes,Lee,Hinton,York,Hernandez,Burke,Reeves,Manning,Dean,Mccarty,Contreras,Macias,Tapia,Malone,Brown,Pennington,Evans,Hamilton,Johnson,Burns,Sullivan,Rodriguez,Brown,Hodges,Anderson,Neal,Kemp,Hall,Camacho,Gutierrez,Keith,Fields,Williams,Hill,Acosta,Johnson,Ward,Frederick,Lewis,Sloan,Palmer,Crawford,Torres,Washington,Joyce,Morgan,Phillips,Carter,Robinson,Marshall,Clark,Gray,Gill,Coffey,Brown,Allen,Lee,Lara,Lawrence,Roberts,Chapman,Horton,Gonzalez,Kent,Henson,Doyle,Burgess,Lamb,Sanders,Chapman,Robinson,Daniels,Powell,Davidson,Taylor,Vazquez,Rivera,Jordan,Carrillo,Spencer,Henry,Davis,Greene,Gomez,Parker,Holloway,Ballard,Newton,Gonzalez,Moore,Henderson,Watkins,Hughes,Martinez,Rojas,Beck,Schwartz,Davis,Steele,Hunter,Ritter,Wright,Hickman,Rasmussen,Hampton,Griffin,Webster,Knight,Jackson,King,Snyder,Young,Arnold,Russell,Ellison,Norman,Martinez,Summers,Campbell,Padilla,Hernandez,Rogers,Hicks,Hill,Ford,House,Blake,Patel,Williams,Smith,Clark,Baker,Mcintyre,Sanchez,Martinez,Wilson,Adams,Parrish,Taylor,Graham,Powell,Gutierrez,Cordova,Page,Turner,Davis,Rose,Smith,Collier,Nelson,Rodriguez,Guzman,Richards,James,Jackson,Silva,Adams }

do_execsql_test group_by_complex_order_by_2 {
  select u.first_name, sum(u.age) from users u group by u.first_name order by -1 * sum(u.age) limit 10;
} {Michael|17324
David|12091
John|11748
Robert|11146
James|10941
Christopher|10807
Jennifer|9815
Matthew|8119
William|7679
Daniel|7498}

do_execsql_test group_by_and_binary_expression_that_depends_on_two_aggregates {
  select u.first_name, sum(u.age) + count(1) from users u group by u.first_name limit 5;
} {Aaron|2919
Abigail|929
Adam|2017
Adrian|467
Adriana|23}

do_execsql_test group_by_function_expression {
  select length(phone_number), count(1) from users group by length(phone_number) order by count(1);
} {22|609
15|630
21|1169
13|1189
20|1193
19|1205
10|1262
16|1748
18|1782
17|1813
12|2400}

do_execsql_test group_by_function_expression_ridiculous {
  select upper(substr(phone_number, 1,3)), count(1) from users group by upper(substr(phone_number, 1,3)) order by -1 * count(1) limit 5;
} {001|2423
+1-|2371
(84|52
(70|49
(41|48}

do_execsql_test group_by_count_star {
  select u.first_name, count(*) from users u group by u.first_name limit 1;
} {Aaron|54}

do_execsql_test group_by_count_star_in_expression {
  select u.first_name, count(*) % 3 from users u group by u.first_name order by u.first_name limit 3;
} {Aaron|0
Abigail|2
Adam|1}

do_execsql_test group_by_count_no_args_in_expression {
  select u.first_name, count() % 3 from users u group by u.first_name order by u.first_name limit 3;
} {Aaron|0
Abigail|2
Adam|1}

do_execsql_test having {
  select u.first_name, round(avg(u.age)) from users u group by u.first_name having avg(u.age) > 84 order by avg(u.age) desc limit 5;
} {Zoe|85.0}

do_execsql_test having_with_binary_cond {
  select u.first_name, sum(u.age) from users u group by u.first_name having sum(u.age) + 1000 = 1023;
} {Collin|23}

do_execsql_test having_with_scalar_fn_over_aggregate {
  select u.first_name, concat(count(1), ' people with this name') from users u group by u.first_name having count(1) > 50 order by count(1) asc limit 5;
} {"Pamela|51 people with this name
Sean|51 people with this name
Patrick|52 people with this name
Sandra|52 people with this name
Jacob|53 people with this name"}

do_execsql_test having_with_multiple_conditions {
  select u.first_name, count(*), round(avg(u.age)) as avg_age 
  from users u 
  group by u.first_name 
  having count(*) > 40 and avg(u.age) > 40
  order by count(*) desc, avg(u.age) desc
  limit 5;
} {Michael|343|51.0
David|235|51.0
John|222|53.0
Robert|216|52.0
Christopher|212|51.0}

# Wanda = 9, Whitney = 11, William = 111
do_execsql_test column_alias_in_group_by_order_by_having {
  select first_name as fn, count(1) as fn_count from users where fn in ('Wanda', 'Whitney', 'William') group by fn having fn_count > 10 order by fn_count;
} {William|150}

do_execsql_test group_by_column_number {
  select u.first_name, count(1) from users u group by 1 limit 1;
} {Aaron|54}

# There was a regression where we incorrectly removed SOME order by terms and left others in place, which is invalid and results in wrong rows being returned.
do_execsql_test groupby_orderby_removal_regression_test {
  select id, last_name, count(1) from users GROUP BY 1,2 order by id, last_name desc limit 3;
} {1|Brown|1
2|Moore|1
3|Rivera|1}

do_execsql_test group_by_no_sorting_required {
  select age, count(1) from users group by age limit 3;
} {18|215
19|256
20|228}

# Compile-time constants are moved to the end of the program.
# Verify that the jump to AggStep works correctly even when the location of the ',' constant has changed.
do_execsql_test group_by_no_sorting_required_and_const_agg_arg {
  select group_concat(state, ',') from users group by age limit 2;
} {IA,DE,FL,NJ,VA,UT,VT,ND,MH,VT,NC,DE,WA,NY,OK,LA,MO,WV,SD,MS,IN,GA,NC,NM,FL,HI,HI,VA,NM,GA,MN,WY,ID,WY,WY,SC,MN,NH,MH,TX,TN,ID,MD,MA,MD,GA,PR,OH,PR,MP,GA,NE,AK,SD,PW,MN,UT,MD,IL,MI,IA,VT,MO,AS,RI,CT,NE,TN,HI,DC,WY,TN,KS,MO,WV,VA,NM,MP,MP,OH,IA,IL,ID,MA,MS,NH,PR,GA,VA,UT,AZ,ID,MP,TN,AL,SC,CT,AZ,PW,NJ,MT,MA,MP,CT,OK,MI,TX,AR,PR,HI,VI,KY,NJ,AZ,AZ,NV,UT,OK,CA,KS,MP,PA,WY,KY,MH,GA,WI,NV,ME,NJ,DC,SC,NV,IN,MD,AZ,UT,TX,WY,OH,OR,TX,CT,AR,MI,WA,OR,MT,VA,OK,WV,MO,MS,OH,MP,SC,VT,OH,IA,VA,MI,WY,OR,WV,IA,NY,IN,MP,FL,MO,VI,LA,CO,KS,HI,SD,AS,MA,SC,MO,KY,AK,MS,WV,MD,OR,PA,TX,DE,WY,KS,MN,IL,NC,UT,NY,ME,AZ,GA,VT,VI,SC,MO,MI,PA,VT,CA,AS,NC,SD,SC,DC,ND,CT,SC
FM,PR,MI,NV,AK,KY,WI,WY,VI,VI,KY,CO,VA,MS,MS,DE,MD,MO,NJ,NV,MS,AR,IA,MI,VI,MS,DC,AR,ND,MS,NH,MI,AK,IL,MS,AR,OR,NJ,AS,NH,OK,FM,MT,CO,TX,KY,VI,PW,GA,NM,MS,WA,CO,NV,OH,NJ,AR,HI,VI,NH,NV,FL,RI,ND,DC,MD,AL,MS,CT,MT,MS,WA,NC,AK,MS,ME,OK,HI,ME,NJ,NH,NY,RI,KS,MP,CA,NV,WY,VA,IA,ME,AZ,PR,WI,NC,NH,MH,PA,OK,OR,ND,IA,OH,WA,FL,ID,OK,ID,MP,VI,AK,TX,UT,TN,AR,VT,UT,TX,PR,CO,IA,NJ,ID,PR,TX,VT,ME,DC,NY,UT,WY,PA,IN,IN,ME,NM,WY,NY,DC,GA,AS,NH,SC,PR,MN,IL,PR,TX,AS,NE,VT,RI,VI,VA,AR,RI,PA,VT,IN,CT,FL,MI,ID,MS,ID,IL,VT,MD,GU,ME,MA,NY,DE,MS,ND,UT,NE,DC,VT,OR,MN,MA,RI,IN,ME,CT,NV,LA,VI,DC,NV,NM,MA,MH,RI,AL,WA,PA,MO,KY,ME,WA,NJ,TX,MN,PA,WI,HI,DC,MT,PA,VT,MH,MN,FM,AR,GU,VA,DC,MT,VI,ND,ND,IL,NC,NV,OK,LA,MT,MH,UT,AZ,IA,IL,NV,NV,LA,TX,FL,VA,MH,IL,UT,AZ,KS,AL,MD,KY,VA,TX,NM,AK,MO,MH,MN,HI}

do_execsql_test_on_specific_db {:memory:} group_by_no_sorting_required_reordered_columns {
  create table t0 (a INT, b INT, c INT);
  create index a_b_idx on t0 (a, b);
  insert into t0 values
    (1,1,1),
    (1,1,2),
    (2,1,3),
    (2,2,3),
    (2,2,5);

  select c, b, a from t0 group by a, b;
} {1|1|1
3|1|2
3|2|2}

do_execsql_test distinct_agg_functions {
select first_name, sum(distinct age), count(distinct age), avg(distinct age)
from users
group by 1
limit 3;
} {Aaron|2104|39|53.9487179487179
Abigail|712|14|50.8571428571429
Adam|1511|31|48.741935483871}

do_execsql_test_on_specific_db {:memory:} having_or {
  CREATE TABLE users (first_name TEXT, age INTEGER);
  INSERT INTO users VALUES
    ('Michael', 25), ('Michael', 50),
    ('David', 50),
    ('Sarah', 65);

  select first_name, count(*) as cnt, avg(age) as avg_age
  from users
  group by first_name
  having cnt = 2 or avg_age = 65
  order by cnt desc
} {Michael|2|37.5
Sarah|1|65.0}

do_execsql_test complex_result_expression_containing_aggregate {
  select
    case when price > 70 then group_concat(name, ',') else '<undisclosed>' end names
  from products where id < 12
  group by price
  order by price;
} {<undisclosed>
<undisclosed>
<undisclosed>
<undisclosed>
<undisclosed>
sweatshirt
jeans
hat
accessories
cap,sneakers}

do_execsql_test complex_result_expression_containing_aggregate_and_rowid {
  select
    case when rowid >= 5 then group_concat(name, ',') else '<undisclosed>' end names
  from products where id < 12
  group by rowid
  order by rowid;
} {<undisclosed>
   <undisclosed>
   <undisclosed>
   <undisclosed>
sweatshirt
shorts
jeans
sneakers
boots
coat
accessories}

do_execsql_test complex_having_expression_containing_aggregate {
  select group_concat(name, ',') from products where id < 12 group by price having (group_concat(name, ',') || price) like 'ca%';
} {cap,sneakers}

do_execsql_test complex_order_by_expression_containing_aggregate {
  select group_concat(name, ',') from products where id < 12 group by price order by (group_concat(name, ',') || price);
} {accessories
boots
cap,sneakers
coat
hat
jeans
shirt
shorts
sweater
sweatshirt}
